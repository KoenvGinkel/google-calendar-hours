{"version":3,"sources":["features/Events.module.css","App.module.css","features/CustomRange.module.css","google_auth.png","features/Hours.module.css","features/WeekStart.module.css","Interface.module.css","stores/authentication.js","AuthScreen.js","stores/api.js","stores/calendarEvents.js","stores/storage.js","constants.js","stores/viewState.js","stores/calendars.js","features/CalendarsList.js","features/Range.js","features/RangeChanger.js","features/CustomRange.js","features/Hours.js","features/RangeDisplay.js","utils/createBlobUrl.js","features/Events.js","features/WeekStart.js","Interface.js","App.js","stores/index.js","index.js"],"names":["module","exports","authentication","createSlice","name","initialState","reducers","selectAccessToken","state","accessToken","selectHasToken","App","href","params","encode","client_id","redirect_uri","window","location","origin","scope","response_type","getGoogleAuthUrl","data-testid","src","logo","alt","width","height","fetchGoogle","a","url","fetch","access_token","response","status","sessionStorage","removeItem","Promise","reject","json","fetchCalendars","fetchEvents","calendarId","pageToken","acc","singleEvents","maxResults","timeMax","dayjs","add","toJSON","items","nextPageToken","fetchCalendarEvents","calendarEvents","loading","map","setCalendarEvents","payload","events","setLoading","actions","selectCalendarEvents","selectIsEventsLoading","updateConfig","rest","existingConfig","JSON","parse","localStorage","getItem","err","updatedConfig","setItem","stringify","getConfig","RANGE_TYPE","SORT_BY","WEEK_START","viewState","setSelectedCalendarId","selectedCalendarId","setRangeType","selectedRangeType","changeRange","currentDatePointerStart","subtract","resetRange","startOf","setWeekStart","weekStart","setStart","setEnd","currentDatePointerEnd","selectSelectedCalendar","selectDate","selectRangeType","selectWeekStart","selectLocaleForWeekStart","selectCurrentDatePointers","rangeStart","rangeEnd","currentDatePointerStartDate","start","end","locale","weekday","selectEventsByRange","filter","event","itemDateStart","Date","dateTime","itemDateEnd","selectHours","hours","forEach","Math","round","setSelectedCalendar","dispatch","getState","id","summary","loadCalendarEvents","changeWeekStart","calendars","list","setCalendars","selectCalendars","CalendarsList","useDispatch","useSelector","selectedCalendar","useEffect","calendarList","label","calendarExists","find","className","bootstrap","onChange","target","value","key","Range","currentRangeType","range","changeRangeType","RangeChanger","role","type","cx","btn","onClick","CustomRange","styles","component","htmlFor","inputDate","format","changeStart","changeEnd","Hours","RangeDisplay","currentDate","localeForWeekStart","date","startOfWeek","nextWeek","createBlobUrl","content","blob","Blob","URL","createObjectURL","Events","useState","isOpen","setIsOpen","sortBy","setSortBy","downloadBlob","filename","currentCalendarName","item","eventsToRender","eventsObject","Object","entries","sort","hoursA","hoursB","lines","concat","join","row","listItem","eventDate","eventName","title","eventHours","sortByLabel","checked","download","downloadLink","WeekStart","weekStartLabel","eventsLoading","interface","hasToken","hashParams","decode","hash","slice","appWrapper","app","sticky","headline","AuthScreen","Interface","footer","rel","extend","getAccessToken","e","getViewState","config","store","configureStore","reducer","preloadedState","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c92432c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Events_list__3uAhA\",\"listItem\":\"Events_listItem__2dyHI\",\"eventDate\":\"Events_eventDate__1FH8S\",\"eventName\":\"Events_eventName__hBqYC\",\"eventHours\":\"Events_eventHours__2bIBe\",\"sortByLabel\":\"Events_sortByLabel__1oEr6\",\"downloadLink\":\"Events_downloadLink__g8EJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__3rnam\",\"app\":\"App_app__1kX79\",\"sticky\":\"App_sticky__1Ko52\",\"content\":\"App_content__3La4L\",\"headline\":\"App_headline__1z0fO\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CustomRange_component__hBFSg\",\"inputDate\":\"CustomRange_inputDate__3v021\"};","module.exports = __webpack_public_path__ + \"static/media/google_auth.75a7cb04.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hours\":\"Hours_hours__2U6LB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekStartLabel\":\"WeekStart_weekStartLabel__1I0YY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interface\":\"Interface_interface__1pJyE\"};","import { createSlice } from '@reduxjs/toolkit';\n\nexport const authentication = createSlice({\n  name: 'authentication',\n  initialState: null,\n  reducers: {},\n});\n\nexport const selectAccessToken = (state) => state.authentication.accessToken;\nexport const selectHasToken = (state) => !!selectAccessToken(state);\n\nexport default authentication.reducer;\n","import React, { Fragment } from 'react';\nimport { encode } from 'qss';\n\nimport logo from './google_auth.png';\n\nconst googleClientId = '502172359025.apps.googleusercontent.com';\nconst googleScope =\n  'https://www.googleapis.com/auth/calendar.readonly https://www.googleapis.com/auth/calendar.events.readonly';\n\nconst App = () => {\n  const getGoogleAuthUrl = () => {\n    const params = encode({\n      client_id: googleClientId,\n      redirect_uri: window.location.origin,\n      scope: googleScope,\n      response_type: 'token',\n    });\n\n    return `https://accounts.google.com/o/oauth2/auth?${params}`;\n  };\n\n  return (\n    <Fragment>\n      <p>\n        This web app lets you see how many hours you spend on a Google Calendar.\n        It uses the Google Calendar API to fetch your calendars and events,\n        crunches the data and displays it nicely. You can filter by day, week,\n        month, year, total or add a custom time range.\n      </p>\n\n      <p>You need to authorize the app with the following link:</p>\n      <a href={getGoogleAuthUrl()} data-testid=\"AuthLink\">\n        <img src={logo} alt=\"Auth with Google\" width=\"191\" height=\"46\" />\n      </a>\n      <h3>Privacy Policy</h3>\n      <p>\n        This app connects to the Google Calendar API to fetch your calendars and\n        events, so that it can calculate the hours. This connection happens\n        directly from your browser to the Google API. There are no server or\n        services involved that might cache the data.\n      </p>\n      <p>\n        None of the data fetched from the Google Calendar API is saved elsewhere\n        but in your browser. After you close the browser window/tab all\n        authentication data is delete (technical detail: sessionStorage is\n        used). Thats why you need to reauthorize with Google the next time you\n        visit the page.\n      </p>\n      <p>This app only has read-only access to your calendar data.</p>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { encode } from 'qss';\nimport dayjs from 'dayjs';\n\nconst API_BASE_PATH = 'https://www.googleapis.com/calendar/v3/';\n\nconst fetchGoogle = async ({ url, accessToken, params }) => {\n  const response = await fetch(\n    `${url}?${encode({\n      access_token: accessToken,\n      ...params,\n    })}`\n  );\n\n  if (response.status !== 200) {\n    sessionStorage.removeItem('accessToken');\n    window.location = '/';\n    return Promise.reject();\n  }\n  return response.json();\n};\n\nexport const fetchCalendars = ({ accessToken }) =>\n  fetchGoogle({ url: `${API_BASE_PATH}users/me/calendarList`, accessToken });\n\nconst fetchEvents = async ({ accessToken, calendarId, pageToken, acc }) => {\n  const { items, nextPageToken } = await fetchGoogle({\n    url: `${API_BASE_PATH}calendars/${calendarId}/events`,\n    accessToken,\n    params: {\n      singleEvents: true,\n      maxResults: 2500,\n      pageToken,\n      timeMax: dayjs().add(1, 'year').toJSON(),\n    },\n  });\n\n  if (!nextPageToken) {\n    return [...acc, ...items];\n  }\n\n  return fetchEvents({\n    accessToken,\n    calendarId,\n    pageToken: nextPageToken,\n    acc: [...acc, ...items],\n  });\n};\n\nexport const fetchCalendarEvents = ({ accessToken, calendarId }) =>\n  fetchEvents({ accessToken, calendarId, acc: [] });\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { selectAccessToken } from './authentication';\nimport { fetchCalendarEvents } from './api';\n\nexport const calendarEvents = createSlice({\n  name: 'calendarEvents',\n  initialState: {\n    loading: false,\n    map: {},\n  },\n  reducers: {\n    setCalendarEvents: (state, { payload }) => {\n      state.map[payload.calendarId] = payload.events;\n    },\n    setLoading: (state, { payload }) => {\n      state.loading = payload;\n    },\n  },\n});\n\nconst { setCalendarEvents, setLoading } = calendarEvents.actions;\n\nexport const loadCalendarEvents = ({ calendarId }) => async (\n  dispatch,\n  getState\n) => {\n  const accessToken = selectAccessToken(getState());\n  try {\n    dispatch(setLoading(true));\n    const items = await fetchCalendarEvents({ accessToken, calendarId });\n    dispatch(\n      setCalendarEvents({\n        calendarId,\n        // take only fields we need\n        events: items.map(({ id, summary, start, end }) => ({\n          id,\n          summary,\n          start,\n          end,\n        })),\n      })\n    );\n  } catch (e) {\n    // do nothing\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const selectCalendarEvents = (state, calendarId) =>\n  state.calendarEvents?.map[calendarId] ?? null;\n\nexport const selectIsEventsLoading = (state) =>\n  state.calendarEvents?.loading ?? false;\n\nexport default calendarEvents.reducer;\n","export const updateConfig = (rest) => {\n  let existingConfig;\n  try {\n    existingConfig = JSON.parse(window.localStorage.getItem('config'));\n  } catch (err) {\n    // don't handle\n  }\n\n  const updatedConfig = {\n    ...existingConfig,\n    ...rest,\n  };\n\n  window.localStorage.setItem('config', JSON.stringify(updatedConfig));\n};\n\nexport const getConfig = () => {\n  try {\n    return JSON.parse(window.localStorage.getItem('config'));\n  } catch (err) {\n    // don't handle\n  }\n  return null;\n};\n","export const RANGE_TYPE = {\n  DAY: 'day',\n  WEEK: 'week',\n  MONTH: 'month',\n  YEAR: 'year',\n  TOTAL: 'total',\n  CUSTOM: 'custom',\n};\n\nexport const SORT_BY = {\n  DATE: 'date',\n  AMOUNT: 'amount',\n};\n\nexport const WEEK_START = {\n  MONDAY: 'monday',\n  SUNDAY: 'sunday',\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/de';\n\nimport { loadCalendarEvents, selectCalendarEvents } from './calendarEvents';\nimport { updateConfig } from './storage';\nimport { RANGE_TYPE, WEEK_START } from '../constants';\n\nexport const viewState = createSlice({\n  name: 'viewState',\n  initialState: null,\n  reducers: {\n    setSelectedCalendarId: (state, { payload }) => {\n      state.selectedCalendarId = payload;\n    },\n    setRangeType: (state, { payload }) => {\n      state.selectedRangeType = payload;\n    },\n    changeRange: (state, { payload }) => {\n      if (payload === 'prev') {\n        state.currentDatePointerStart = dayjs(state.currentDatePointerStart)\n          .subtract(1, state.selectedRangeType)\n          .toJSON();\n      } else if (payload === 'next') {\n        state.currentDatePointerStart = dayjs(state.currentDatePointerStart)\n          .add(1, state.selectedRangeType)\n          .toJSON();\n      }\n    },\n    resetRange: (state) => {\n      state.currentDatePointerStart = dayjs().startOf('day').toJSON();\n    },\n    setWeekStart: (state, { payload }) => {\n      state.weekStart = payload;\n    },\n    setStart: (state, { payload }) => {\n      state.currentDatePointerStart = payload;\n    },\n    setEnd: (state, { payload }) => {\n      state.currentDatePointerEnd = payload;\n    },\n  },\n});\n\nexport const { changeRange, resetRange } = viewState.actions;\nconst {\n  setSelectedCalendarId,\n  setRangeType,\n  setWeekStart,\n  setStart,\n  setEnd,\n} = viewState.actions;\n\nexport const selectSelectedCalendar = (state) =>\n  state.viewState.selectedCalendarId;\n\nexport const selectDate = (state) => state.viewState.currentDatePointerStart;\n\nexport const selectRangeType = (state) => state.viewState.selectedRangeType;\nexport const selectWeekStart = (state) => state.viewState.weekStart;\nexport const selectLocaleForWeekStart = (state) =>\n  state.viewState.weekStart === WEEK_START.SUNDAY ? 'en' : 'de';\n\nexport const selectCurrentDatePointers = (state) => {\n  const {\n    selectedRangeType,\n    currentDatePointerStart,\n    currentDatePointerEnd,\n  } = state.viewState;\n  const currentDatePointerStartDate = dayjs(currentDatePointerStart);\n\n  if (selectedRangeType === RANGE_TYPE.CUSTOM) {\n    return {\n      start: dayjs(currentDatePointerStart),\n      end: dayjs(currentDatePointerEnd),\n    };\n  }\n\n  let rangeStart;\n  let rangeEnd;\n\n  if (selectedRangeType === RANGE_TYPE.DAY) {\n    rangeStart = currentDatePointerStartDate.startOf('day');\n    rangeEnd = rangeStart.add(1, 'day');\n  } else if (selectedRangeType === RANGE_TYPE.WEEK) {\n    rangeStart = currentDatePointerStartDate\n      .locale(selectLocaleForWeekStart(state))\n      .startOf('day')\n      .weekday(0);\n    rangeEnd = rangeStart.add(1, 'week');\n  } else if (selectedRangeType === RANGE_TYPE.MONTH) {\n    rangeStart = currentDatePointerStartDate.startOf('month');\n    rangeEnd = rangeStart.add(1, 'month');\n  } else if (selectedRangeType === RANGE_TYPE.YEAR) {\n    rangeStart = currentDatePointerStartDate.startOf('year');\n    rangeEnd = rangeStart.add(1, 'year');\n  } else if (selectedRangeType === RANGE_TYPE.TOTAL) {\n    rangeStart = dayjs('2000-01-01T10:00:00Z');\n    rangeEnd = dayjs('2040-01-01T10:00:00Z');\n  }\n\n  return {\n    start: rangeStart,\n    end: rangeEnd,\n  };\n};\n\nexport const selectEventsByRange = (state) => {\n  const events = selectCalendarEvents(state, selectSelectedCalendar(state));\n\n  if (!events) {\n    return null;\n  }\n\n  const { start, end } = selectCurrentDatePointers(state);\n\n  return events.filter((event) => {\n    const itemDateStart = new Date(event.start.dateTime);\n    const itemDateEnd = new Date(event.end.dateTime);\n\n    return itemDateStart > start && itemDateEnd < end;\n  });\n};\n\nexport const selectHours = (state) => {\n  const events = selectEventsByRange(state);\n\n  if (!events) {\n    return null;\n  }\n\n  let hours = 0;\n\n  events.forEach((event) => {\n    const itemDateStart = new Date(event.start.dateTime);\n    const itemDateEnd = new Date(event.end.dateTime);\n\n    hours += (itemDateEnd - itemDateStart) / 1000 / 60 / 60;\n  });\n\n  return Math.round(hours * 100) / 100;\n};\n\nexport const setSelectedCalendar = ({ calendarId }) => (dispatch, getState) => {\n  dispatch(setSelectedCalendarId(calendarId));\n  updateConfig({ selectedCalendarId: calendarId });\n  const calendarEvents = selectCalendarEvents(getState(), calendarId);\n  if (!calendarEvents) {\n    dispatch(loadCalendarEvents({ calendarId }));\n  }\n};\n\nexport const changeRangeType = ({ range }) => (dispatch, getState) => {\n  if (range === RANGE_TYPE.CUSTOM) {\n    const { start, end } = selectCurrentDatePointers(getState());\n    dispatch(setStart(start.toJSON()));\n    dispatch(setEnd(end.toJSON()));\n    updateConfig({ start: start.toJSON(), end: end.toJSON() });\n  }\n  dispatch(setRangeType(range));\n  updateConfig({ selectedRangeType: range });\n};\n\nexport const changeWeekStart = (weekStart) => (dispatch) => {\n  dispatch(setWeekStart(weekStart));\n  updateConfig({ weekStart });\n};\n\nexport const changeStart = (start) => (dispatch) => {\n  dispatch(setStart(start));\n  updateConfig({ start });\n};\n\nexport const changeEnd = (end) => (dispatch) => {\n  dispatch(setEnd(end));\n  updateConfig({ end });\n};\n\nexport default viewState.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { selectAccessToken } from './authentication';\nimport { fetchCalendars } from './api';\nimport { setSelectedCalendar } from './viewState';\nimport { getConfig } from './storage';\n\nexport const calendars = createSlice({\n  name: 'calendars',\n  initialState: {\n    list: null,\n  },\n  reducers: {\n    setCalendars: (state, { payload }) => {\n      state.list = payload;\n    },\n  },\n});\n\nconst { setCalendars } = calendars.actions;\n\nexport const loadCalendars = () => async (dispatch, getState) => {\n  const accessToken = selectAccessToken(getState());\n  try {\n    const { items } = await fetchCalendars({ accessToken });\n    const calendarList = items.map(({ id, summary }) => ({\n      id,\n      label: summary,\n    }));\n\n    dispatch(setCalendars(calendarList));\n\n    const { selectedCalendarId } = getConfig() ?? {};\n\n    if (selectedCalendarId) {\n      const calendarExists = calendarList?.find(\n        ({ id }) => id === selectedCalendarId\n      );\n\n      if (calendarExists) {\n        dispatch(setSelectedCalendar({ calendarId: selectedCalendarId }));\n      } else {\n        // dispatch null, so that it's removed from localStorage config\n        dispatch(setSelectedCalendar({ calendarId: null }));\n      }\n    }\n  } catch (e) {\n    // do nothing\n  }\n};\n\nexport const selectCalendars = (state) => state.calendars.list;\n\nexport default calendars.reducer;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport { loadCalendars, selectCalendars } from '../stores/calendars';\nimport {\n  selectSelectedCalendar,\n  setSelectedCalendar,\n} from '../stores/viewState';\n\nconst CalendarsList = () => {\n  const dispatch = useDispatch();\n\n  const calendars = useSelector(selectCalendars);\n  const selectedCalendar = useSelector(selectSelectedCalendar);\n\n  useEffect(() => {\n    if (!calendars) {\n      dispatch(loadCalendars());\n    }\n  }, [dispatch, calendars]);\n\n  if (!calendars) {\n    return <div>loading</div>;\n  }\n\n  return (\n    <select\n      data-testid=\"CalendarsList\"\n      className={bootstrap['form-select']}\n      onChange={(event) => {\n        dispatch(setSelectedCalendar({ calendarId: event.target.value }));\n      }}\n      value={selectedCalendar ?? ''}\n    >\n      {!selectedCalendar && (\n        <option key=\"default\">Please select calendar</option>\n      )}\n      {calendars.map(({ id, label }) => (\n        <option value={id} key={id}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default CalendarsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport { changeRangeType, selectRangeType } from '../stores/viewState';\n\nconst Range = () => {\n  const dispatch = useDispatch();\n\n  const currentRangeType = useSelector(selectRangeType);\n\n  return (\n    <select\n      data-testid=\"RangeSelectList\"\n      className={bootstrap['form-select']}\n      onChange={(event) =>\n        dispatch(changeRangeType({ range: event.target.value }))\n      }\n      value={currentRangeType}\n    >\n      <option value=\"day\">Day</option>\n      <option value=\"week\">Week</option>\n      <option value=\"month\">Month</option>\n      <option value=\"year\">Year</option>\n      <option value=\"total\">Total</option>\n      <option value=\"custom\">Custom</option>\n    </select>\n  );\n};\n\nexport default Range;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport cx from 'classnames';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport { changeRange, resetRange, selectRangeType } from '../stores/viewState';\nimport { RANGE_TYPE } from '../constants';\n\nconst RangeChanger = () => {\n  const dispatch = useDispatch();\n\n  const currentRangeType = useSelector(selectRangeType);\n\n  if (\n    currentRangeType === RANGE_TYPE.TOTAL ||\n    currentRangeType === RANGE_TYPE.CUSTOM\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"RangeChanger\"\n      className={bootstrap['btn-group']}\n      role=\"group\"\n    >\n      <button\n        type=\"button\"\n        className={cx(bootstrap.btn, bootstrap['btn-outline-secondary'])}\n        onClick={() => dispatch(changeRange('prev'))}\n      >\n        Prev\n      </button>\n      <button\n        type=\"button\"\n        className={cx(bootstrap.btn, bootstrap['btn-outline-secondary'])}\n        onClick={() => dispatch(resetRange())}\n      >\n        Reset\n      </button>\n      <button\n        type=\"button\"\n        className={cx(bootstrap.btn, bootstrap['btn-outline-secondary'])}\n        onClick={() => dispatch(changeRange('next'))}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default RangeChanger;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport dayjs from 'dayjs';\nimport cx from 'classnames';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  selectRangeType,\n  selectCurrentDatePointers,\n  changeStart,\n  changeEnd,\n} from '../stores/viewState';\nimport { RANGE_TYPE } from '../constants';\n\nimport styles from './CustomRange.module.css';\n\nconst CustomRange = () => {\n  const dispatch = useDispatch();\n\n  const currentRangeType = useSelector(selectRangeType);\n  const { start, end } = useSelector(selectCurrentDatePointers);\n\n  if (currentRangeType !== RANGE_TYPE.CUSTOM) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.component,\n        bootstrap['input-group'],\n        bootstrap['input-group-sm']\n      )}\n      data-testid=\"CustomRange\"\n    >\n      <label htmlFor=\"dateStart\" className={bootstrap['input-group-text']}>\n        Start:\n      </label>\n      <input\n        className={cx(bootstrap['form-control'], styles.inputDate)}\n        type=\"date\"\n        id=\"dateStart\"\n        value={dayjs(start).format('YYYY-MM-DD')}\n        onChange={({ target }) =>\n          dispatch(changeStart(new Date(target.value).toJSON()))\n        }\n      />\n      <label htmlFor=\"dateEnd\" className={bootstrap['input-group-text']}>\n        End:\n      </label>\n      <input\n        className={cx(bootstrap['form-control'], styles.inputDate)}\n        type=\"date\"\n        id=\"dateEnd\"\n        value={dayjs(end).format('YYYY-MM-DD')}\n        onChange={({ target }) =>\n          dispatch(changeEnd(new Date(target.value).toJSON()))\n        }\n      />\n    </div>\n  );\n};\n\nexport default CustomRange;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectHours } from '../stores/viewState';\n\nimport styles from './Hours.module.css';\n\nconst Hours = () => (\n  <div className={styles.hours}>{`${useSelector(selectHours)}h`}</div>\n);\n\nexport default Hours;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\n\nimport {\n  selectDate,\n  selectRangeType,\n  selectLocaleForWeekStart,\n} from '../stores/viewState';\nimport { RANGE_TYPE } from '../constants';\n\nconst RangeDisplay = () => {\n  const currentDate = useSelector(selectDate);\n  const currentRangeType = useSelector(selectRangeType);\n  const localeForWeekStart = useSelector(selectLocaleForWeekStart);\n\n  if (currentRangeType === RANGE_TYPE.TOTAL) {\n    return null;\n  }\n\n  let range;\n  const date = dayjs(currentDate);\n\n  if (currentRangeType === RANGE_TYPE.DAY) {\n    range = date.locale('en').format('dddd, MMMM D, YYYY');\n  } else if (currentRangeType === RANGE_TYPE.WEEK) {\n    const startOfWeek = date.locale(localeForWeekStart).weekday(0);\n    const nextWeek = startOfWeek.add(1, 'week');\n    range = `${startOfWeek\n      .locale('en')\n      .format('DD.MM.YYYY')} -  ${nextWeek.locale('en').format('DD.MM.YYYY')}`;\n  } else if (currentRangeType === RANGE_TYPE.MONTH) {\n    range = date.locale('en').format('MMMM, YYYY');\n  } else if (currentRangeType === RANGE_TYPE.YEAR) {\n    range = date.locale('en').format('YYYY');\n  }\n\n  return <div data-testid=\"RangeDisplay\">{range}</div>;\n};\n\nexport default RangeDisplay;\n","const createBlobUrl = (content) => {\n  const MIME_TYPE = 'text/csv;charset=UTF-8';\n  const UTF8_BOM = '\\uFEFF';\n  const blob = new Blob([UTF8_BOM + content], { type: MIME_TYPE });\n  return window.URL.createObjectURL(blob);\n};\n\nexport default createBlobUrl;\n","import React, { Fragment, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport dayjs from 'dayjs';\nimport cx from 'classnames';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  selectHours,\n  selectSelectedCalendar,\n  selectEventsByRange,\n  selectDate,\n} from '../stores/viewState';\nimport { selectCalendars } from '../stores/calendars';\nimport createBlobUrl from '../utils/createBlobUrl';\nimport { SORT_BY } from '../constants';\n\nimport styles from './Events.module.css';\n\nconst EXPORT_DATE_FORMAT = 'DD.MM.YYYY HH:mm';\n\nconst Events = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [sortBy, setSortBy] = useState(SORT_BY.DATE);\n\n  const selectedCalendar = useSelector(selectSelectedCalendar);\n  const events = useSelector((state) =>\n    selectEventsByRange(state, selectedCalendar)\n  );\n  const calendars = useSelector(selectCalendars);\n  const date = useSelector(selectDate);\n\n  const rangeHours = useSelector(selectHours);\n\n  if (!rangeHours) {\n    return null;\n  }\n\n  const currentCalendarName = calendars.find(\n    (item) => item.id === selectedCalendar\n  )?.label;\n\n  let eventsToRender = events.map((event) => {\n    const itemDateStart = new Date(event.start.dateTime);\n    const itemDateEnd = new Date(event.end.dateTime);\n\n    const hours =\n      Math.round(((itemDateEnd - itemDateStart) / 1000 / 60 / 60) * 100) / 100;\n\n    return {\n      ...event,\n      hours,\n    };\n  });\n\n  let downloadBlob;\n  let filename;\n\n  if (sortBy === SORT_BY.AMOUNT) {\n    const eventsObject = {};\n    eventsToRender.forEach(({ summary, hours }) => {\n      if (eventsObject[summary]) {\n        eventsObject[summary] += hours;\n      } else {\n        eventsObject[summary] = hours;\n      }\n    });\n    const newArray = Object.entries(eventsObject).map(([key, value]) => ({\n      summary: key,\n      hours: value,\n      id: key,\n    }));\n    eventsToRender = newArray.sort(({ hours: hoursA }, { hours: hoursB }) => {\n      if (hoursA > hoursB) {\n        return -1;\n      }\n      if (hoursA < hoursB) {\n        return 1;\n      }\n\n      return 0;\n    });\n  } else {\n    const lines = eventsToRender.map(\n      ({ start, end, summary, hours }) =>\n        `${dayjs(start.dateTime).format(EXPORT_DATE_FORMAT)},${dayjs(\n          end.dateTime\n        ).format(EXPORT_DATE_FORMAT)},\"${summary}\",${hours}`\n    );\n\n    downloadBlob = createBlobUrl(\n      ['Start,End,Title,Hours'].concat(lines).join('\\n')\n    );\n    filename = `${currentCalendarName}_${dayjs(date)\n      .locale('en')\n      .format('MMMM_YYYY')}_(${dayjs().format('YYYYMMDDHHmmss')}).csv`;\n  }\n\n  return (\n    <div>\n      <div>\n        <button\n          type=\"button\"\n          className={cx(\n            bootstrap.btn,\n            bootstrap['btn-outline-secondary'],\n            bootstrap['btn-sm']\n          )}\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          {isOpen ? 'hide details' : 'show details'}\n        </button>\n      </div>\n      {isOpen && (\n        <Fragment>\n          <ul className={styles.list}>\n            {eventsToRender.map((event) => (\n              <li key={event.id} className={cx(bootstrap.row, styles.listItem)}>\n                {sortBy === SORT_BY.DATE && (\n                  <span className={cx(styles.eventDate, bootstrap['col-sm'])}>\n                    {dayjs(event.start.dateTime).format('DD.MM.')}\n                  </span>\n                )}\n                <span\n                  className={cx(bootstrap['col-sm'], styles.eventName)}\n                  title={event.summary}\n                >\n                  {event.summary}\n                </span>\n                <span\n                  className={cx(bootstrap['col-sm'], styles.eventHours)}\n                >{`${event.hours}h`}</span>\n              </li>\n            ))}\n          </ul>\n          <div>\n            <span className={styles.sortByLabel}>Sort by:</span>\n            <div\n              className={cx(bootstrap['btn-group'], bootstrap['btn-group-sm'])}\n              role=\"group\"\n            >\n              <input\n                className={bootstrap['btn-check']}\n                type=\"radio\"\n                value=\"date\"\n                id=\"date\"\n                checked={sortBy === SORT_BY.DATE}\n                onChange={({ target }) => setSortBy(target.value)}\n              />\n              <label\n                className={cx(\n                  bootstrap.btn,\n                  bootstrap['btn-outline-secondary']\n                )}\n                htmlFor=\"date\"\n              >\n                Date\n              </label>\n              <input\n                className={bootstrap['btn-check']}\n                type=\"radio\"\n                value=\"amount\"\n                id=\"amount\"\n                checked={sortBy === SORT_BY.AMOUNT}\n                onChange={({ target }) => setSortBy(target.value)}\n              />\n              <label\n                className={cx(\n                  bootstrap.btn,\n                  bootstrap['btn-outline-secondary']\n                )}\n                htmlFor=\"amount\"\n              >\n                Amount\n              </label>\n            </div>\n            {downloadBlob && (\n              <a\n                href={downloadBlob}\n                download={filename}\n                className={cx(\n                  styles.downloadLink,\n                  bootstrap.btn,\n                  bootstrap['btn-outline-secondary'],\n                  bootstrap['btn-sm']\n                )}\n              >\n                Export as CSV\n              </a>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport cx from 'classnames';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  selectRangeType,\n  selectWeekStart,\n  changeWeekStart,\n} from '../stores/viewState';\nimport { RANGE_TYPE, WEEK_START } from '../constants';\n\nimport styles from './WeekStart.module.css';\n\nconst WeekStart = () => {\n  const dispatch = useDispatch();\n\n  const currentRangeType = useSelector(selectRangeType);\n  const weekStart = useSelector(selectWeekStart);\n\n  if (currentRangeType !== RANGE_TYPE.WEEK) {\n    return null;\n  }\n\n  return (\n    <div>\n      <span className={styles.weekStartLabel}>Week starts on:</span>\n      <div\n        className={cx(bootstrap['btn-group'], bootstrap['btn-group-sm'])}\n        role=\"group\"\n      >\n        <input\n          className={bootstrap['btn-check']}\n          type=\"radio\"\n          value=\"sunday\"\n          id=\"sunday\"\n          checked={weekStart === WEEK_START.SUNDAY}\n          onChange={({ target }) => dispatch(changeWeekStart(target.value))}\n        />\n        <label\n          className={cx(bootstrap.btn, bootstrap['btn-outline-secondary'])}\n          htmlFor=\"sunday\"\n        >\n          Sunday\n        </label>\n        <input\n          className={bootstrap['btn-check']}\n          type=\"radio\"\n          value=\"monday\"\n          id=\"monday\"\n          checked={weekStart === WEEK_START.MONDAY}\n          onChange={({ target }) => dispatch(changeWeekStart(target.value))}\n        />\n        <label\n          className={cx(bootstrap.btn, bootstrap['btn-outline-secondary'])}\n          htmlFor=\"monday\"\n        >\n          Monday\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default WeekStart;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CalendarsList from './features/CalendarsList';\nimport Range from './features/Range';\nimport RangeChanger from './features/RangeChanger';\nimport CustomRange from './features/CustomRange';\nimport Hours from './features/Hours';\nimport RangeDisplay from './features/RangeDisplay';\nimport Events from './features/Events';\nimport WeekStart from './features/WeekStart';\nimport { selectSelectedCalendar } from './stores/viewState';\nimport {\n  selectCalendarEvents,\n  selectIsEventsLoading,\n} from './stores/calendarEvents';\n\nimport styles from './Interface.module.css';\n\nconst App = () => {\n  const selectedCalendar = useSelector(selectSelectedCalendar);\n  const events = useSelector((state) =>\n    selectCalendarEvents(state, selectedCalendar)\n  );\n  const eventsLoading = useSelector(selectIsEventsLoading);\n\n  return (\n    <div className={styles.interface}>\n      <CalendarsList />\n      {eventsLoading && 'loading'}\n      {events && (\n        <Fragment>\n          <Range />\n          <RangeChanger />\n          <CustomRange />\n          <Hours />\n          <WeekStart />\n          <RangeDisplay />\n          <Events />\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { decode } from 'qss';\n\nimport { selectHasToken } from './stores/authentication';\n\nimport AuthScreen from './AuthScreen';\nimport Interface from './Interface';\n\nimport styles from './App.module.css';\n\nconst App = () => {\n  const hasToken = useSelector(selectHasToken);\n\n  useEffect(() => {\n    const hashParams = decode(window.location?.hash?.slice(1) ?? '');\n\n    if (hashParams.access_token) {\n      sessionStorage.setItem('accessToken', hashParams.access_token);\n      window.location = '/';\n    }\n  }, []);\n\n  return (\n    <div className={styles.appWrapper}>\n      <div className={styles.app}>\n        <div className={styles.sticky}>\n          <div className={styles.content}>\n            <h1 className={styles.headline}>\n              Google Calendar Hours Calculator\n            </h1>\n            {!hasToken && <AuthScreen />}\n            {hasToken && <Interface />}\n          </div>\n          <footer className={styles.footer}>\n            <p>\n              <span>© 2011 - 2021. This app is open source. </span>\n              <a\n                href=\"https://github.com/aronwoost/google-calendar-hours\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Check it on GitHub\n              </a>\n              <span>.</span>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport dayjs from 'dayjs';\nimport weekday from 'dayjs/plugin/weekday';\n\nimport authentication from './authentication';\nimport calendars from './calendars';\nimport viewState from './viewState';\nimport calendarEvents from './calendarEvents';\nimport { getConfig } from './storage';\nimport { RANGE_TYPE, WEEK_START } from '../constants';\n\ndayjs.extend(weekday);\n\nconst getAccessToken = () => {\n  try {\n    return sessionStorage.getItem('accessToken');\n  } catch (e) {\n    // don't handle\n  }\n\n  return null;\n};\n\nconst getViewState = () => {\n  const config = getConfig() ?? {};\n  return {\n    selectedRangeType: config.selectedRangeType ?? RANGE_TYPE.MONTH,\n    currentDatePointerStart:\n      config.selectedRangeType === RANGE_TYPE.CUSTOM\n        ? config.start\n        : dayjs().startOf('day').toJSON(),\n    currentDatePointerEnd: config.end,\n    weekStart: config.weekStart ?? WEEK_START.MONDAY,\n  };\n};\n\nconst store = () =>\n  configureStore({\n    reducer: {\n      authentication,\n      calendars,\n      viewState,\n      calendarEvents,\n    },\n    preloadedState: {\n      authentication: { accessToken: getAccessToken() },\n      viewState: getViewState(),\n    },\n  });\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport './index.css';\nimport App from './App';\nimport store from './stores';\n\nSentry.init({\n  dsn:\n    'https://72dc5f435c6c4bf8a7c455a11ad94e89@o566390.ingest.sentry.io/5709198',\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}